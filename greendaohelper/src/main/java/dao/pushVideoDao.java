package dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import dao.pushVideo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table PUSH_VIDEO.
*/
public class pushVideoDao extends AbstractDao<pushVideo, Long> {

    public static final String TABLENAME = "PUSH_VIDEO";

    /**
     * Properties of entity pushVideo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property D_id = new Property(0, Long.class, "d_id", true, "D_ID");
        public final static Property D_area = new Property(1, String.class, "d_area", false, "D_AREA");
        public final static Property D_content = new Property(2, String.class, "d_content", false, "D_CONTENT");
        public final static Property D_directed = new Property(3, String.class, "d_directed", false, "D_DIRECTED");
        public final static Property D_dayhits = new Property(4, String.class, "d_dayhits", false, "D_DAYHITS");
        public final static Property D_true_play_url = new Property(5, String.class, "d_true_play_url", false, "D_TRUE_PLAY_URL");
    };


    public pushVideoDao(DaoConfig config) {
        super(config);
    }
    
    public pushVideoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'PUSH_VIDEO' (" + //
                "'D_ID' INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: d_id
                "'D_AREA' TEXT NOT NULL ," + // 1: d_area
                "'D_CONTENT' TEXT NOT NULL ," + // 2: d_content
                "'D_DIRECTED' TEXT NOT NULL ," + // 3: d_directed
                "'D_DAYHITS' TEXT NOT NULL ," + // 4: d_dayhits
                "'D_TRUE_PLAY_URL' TEXT NOT NULL );"); // 5: d_true_play_url
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'PUSH_VIDEO'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, pushVideo entity) {
        stmt.clearBindings();
 
        Long d_id = entity.getD_id();
        if (d_id != null) {
            stmt.bindLong(1, d_id);
        }
        stmt.bindString(2, entity.getD_area());
        stmt.bindString(3, entity.getD_content());
        stmt.bindString(4, entity.getD_directed());
        stmt.bindString(5, entity.getD_dayhits());
        stmt.bindString(6, entity.getD_true_play_url());
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public pushVideo readEntity(Cursor cursor, int offset) {
        pushVideo entity = new pushVideo( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // d_id
            cursor.getString(offset + 1), // d_area
            cursor.getString(offset + 2), // d_content
            cursor.getString(offset + 3), // d_directed
            cursor.getString(offset + 4), // d_dayhits
            cursor.getString(offset + 5) // d_true_play_url
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, pushVideo entity, int offset) {
        entity.setD_id(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setD_area(cursor.getString(offset + 1));
        entity.setD_content(cursor.getString(offset + 2));
        entity.setD_directed(cursor.getString(offset + 3));
        entity.setD_dayhits(cursor.getString(offset + 4));
        entity.setD_true_play_url(cursor.getString(offset + 5));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(pushVideo entity, long rowId) {
        entity.setD_id(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(pushVideo entity) {
        if(entity != null) {
            return entity.getD_id();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
